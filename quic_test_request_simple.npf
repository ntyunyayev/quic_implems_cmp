%info
A test script to compare performance of QUIC stacks

This file is intended to be run with NPF

%variables

FSIZE={0,1000,10000,100000,1000000}
SERVER=picoquic
CLIENT=picoquic
RP=10
CLIENT_IRQ=8
CLIENT_CPU=8
CLIENT_THREADS=8
SRV_IRQ=0
SRV_CPU=1
CLIENT_PARALLEL=128
H=10
AFF=2
//PARRALEL=[1*64]
//THREADS=[1*64]

%late_variables
FILE_PATH=EXPAND(bin-${FSIZE}K)
GEN_CONCURRENT=EXPAND($CLIENT_PARALLEL)
GEN_THREADS=EXPAND($CLIENT_THREADS)

key=${NPF_ROOT}/server.key
cert=${NPF_ROOT}/server.cert
RUNTIME=10000

%init@client sudo=true
//enabling IRQ balance
ethtool -L ens1f0 combined 32 && sudo systemctl start irqbalance && sudo /usr/sbin/set_irq_affinity_cpulist.sh 0-31 ens1f0
sudo arp -s  10.100.0.2 50:6b:4b:f3:7c:70
sysctl -w net.ipv4.neigh.default.gc_thresh1=2048
sysctl -w net.ipv4.neigh.default.gc_thresh2=8192
sysctl -w net.ipv4.neigh.default.gc_thresh3=65536
sysctl -w net.core.somaxconn=1000000
sysctl -w net.ipv4.tcp_max_syn_backlog=3240000
sysctl -w net.ipv4.tcp_fin_timeout=5
sysctl -w net.ipv4.tcp_max_orphans=1000000
sysctl -w net.ipv4.tcp_tw_reuse=1

%init@server sudo=true
//removing irqbalance, core 2 will handles every interrupt
ethtool -L ens1f0 combined 1 && sudo systemctl stop irqbalance && sudo /usr/sbin/set_irq_affinity_cpulist.sh $AFF ens1f0
sysctl -w net.ipv4.neigh.default.gc_thresh1=2048
sysctl -w net.ipv4.neigh.default.gc_thresh2=8192
sysctl -w net.ipv4.neigh.default.gc_thresh3=65536
sysctl -w net.core.somaxconn=1000000
sysctl -w net.ipv4.tcp_max_syn_backlog=3240000
sysctl -w net.ipv4.tcp_fin_timeout=5
sysctl -w net.ipv4.tcp_max_orphans=1000000
sysctl -w net.ipv4.tcp_tw_reuse=1

%config
timeout=60
n_runs=5


%picoquic_dpdk:script@server sudo=true
sudo ethtool -L ens1f0 combined 1 && sudo systemctl stop irqbalance && sudo /usr/sbin/set_irq_affinity_cpulist.sh 2 ens1f0
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/nikita/dpdk_install_21.11/lib/x86_64-linux-gnu
sudo env PATH=$PATH LD_LIBRARY_PATH=$LD_LIBRARY_PATH dpdk_picoquicdemo --dpdk -l 0-1 -a 0000:18:00.0 -- -T /dev/null -c $cert -k $key -p 4443 2>&1 | tee ~/logs.handshakes 

%picoquic_dpdk:script@client sudo=true delay=3
export LD_LIBRARY_PATH=/home/tbarbette/workspace/dpdk-21.08/install/lib/x86_64-linux-gnu/:/usr/lib64/:$LD_LIBRARY_PATH
cd /home/tbarbette/workspace/wrk-quic/src
DST=10.100.0.2
sudo taskset -c 8-15 ../wrk -a -R 0 --timeout $H -q -t 8 -c 128  https://$DST:4443/$FSIZE -L -U 2>&1 | tee ~/out.txt
echo "RESULT-HANDSHAKES "$(sudo cat ~/out.txt | tail -n 3 | grep "Requests/sec" | awk '{print $2}')



%picoquic:script@server sudo=true
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/nikita/dpdk_install_21.11/lib/x86_64-linux-gnu
sudo env PATH=$PATH LD_LIBRARY_PATH=$LD_LIBRARY_PATH taskset -c 2 dpdk_picoquicdemo --nodpdk -T /dev/null -c $cert -k $key -p 4443

%picoquic:script@client sudo=true delay=5
export LD_LIBRARY_PATH=/home/tbarbette/workspace/dpdk-21.08/install/lib/x86_64-linux-gnu/:/usr/lib64/:$LD_LIBRARY_PATH
cd /home/tbarbette/workspace/wrk-quic/src
DST=10.100.0.2
sudo taskset -c 8-15 ../wrk -a -R 0 --timeout $H -q -t 15 -c 128  https://$DST:4443/$FSIZE -L -U 2>&1 | tee ~/out.txt
echo "RESULT-HANDSHAKES "$(sudo cat ~/out.txt | tail -n 3 | grep "Requests/sec" | awk '{print $2}')